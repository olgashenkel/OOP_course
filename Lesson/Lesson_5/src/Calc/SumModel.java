package Calc;

public class SumModel extends CalcModel {

    public SumModel() {
    }

    @Override
    public int result() {
        return x + y;
    }

    @Override
    public void setX(int value) {
        super.x = value;
    }

    @Override
    public void setY(int value) {
        super.y = value;
    }
}

// главное отличие между this и super в Java в том, что this представляет
// текущий экземпляр класса, в то время как super - текущий экземпляр
// родительского класса.

// Чем this и super похожи
//1. И this, и super — это нестатические переменные,
// соответственно их нельзя использовать в статическом контексте,
// а это означает, что их нельзя использовать в методе main.
// Это приведет к ошибке во время компиляции "на нестатическую переменную this
// нельзя ссылаться из статического контекста". То же самое произойдет,
// если в методе main воспользоваться ключевым словом super.
//
//2. И this, и super могут использоваться внутри конструкторов для вызова
// других конструкторов по цепочке, нпр., this() и super() вызывают конструктор
// без аргументов наследующего и родительского классов соответственно.
//
//3. Внутри конструктора this и super должны стоять выше всех других выражений,
// в самом начале, иначе компилятор выдаст сообщение об ошибке.
// Из чего следует, что в одном конструкторе не может быть одновременно и this(),
// и super().

//Различия в super и this
//1. переменная this ссылается на текущий экземпляр класса, в котором она используется,
// тогда как super — на текущий экземпляр родительского класса.
//
//2. Каждый конструктор при отсутствии явных вызовов других конструкторов неявно вызывает
// с помощью super() конструктор без аргументов родительского класса,
// при этом у вас всегда остается возможность явно вызвать любой другой конструктор
// с помощью либо this(), либо super().